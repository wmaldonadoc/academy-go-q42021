// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	controller "github.com/wmaldonadoc/academy-go-q42021/interface/controller"
)

// PokemonController is an autogenerated mock type for the PokemonController type
type PokemonController struct {
	mock.Mock
}

// FilterSearching provides a mock function with given fields: c
func (_m *PokemonController) FilterSearching(c controller.Context) *controller.ControllerResponse {
	ret := _m.Called(c)

	var r0 *controller.ControllerResponse
	if rf, ok := ret.Get(0).(func(controller.Context) *controller.ControllerResponse); ok {
		r0 = rf(c)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*controller.ControllerResponse)
		}
	}

	return r0
}

// GetByID provides a mock function with given fields: c
func (_m *PokemonController) GetByID(c controller.Context) *controller.ControllerResponse {
	ret := _m.Called(c)

	var r0 *controller.ControllerResponse
	if rf, ok := ret.Get(0).(func(controller.Context) *controller.ControllerResponse); ok {
		r0 = rf(c)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*controller.ControllerResponse)
		}
	}

	return r0
}

// GetByName provides a mock function with given fields: c
func (_m *PokemonController) GetByName(c controller.Context) *controller.ControllerResponse {
	ret := _m.Called(c)

	var r0 *controller.ControllerResponse
	if rf, ok := ret.Get(0).(func(controller.Context) *controller.ControllerResponse); ok {
		r0 = rf(c)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*controller.ControllerResponse)
		}
	}

	return r0
}
